import logging
from datetime import datetime

from fastapi import status
from fastapi.testclient import TestClient

from app.main import app
from app.db.db_connection import session_scope
from app.models.tasks import Task, TblTasks

client = TestClient(app)

test_task_id = ""


def test_get_tasks():
    response = client.get("/tasks")
    logging.info(response.json())

    assert response.status_code == status.HTTP_200_OK


def test_user_can_create_task():
    global test_task_id

    task_test = Task(
        title="generated by test module test_main.py",
        content="test content",
        deadline=datetime.now(),
    )
    logging.info(task_test.__repr__())

    response = client.post("/tasks", data=task_test.json())
    logging.info(response.json())
    logging.info(type(response.json()))
    test_task_id = response.json()["id"]
    logging.info(test_task_id)

    assert response.status_code == status.HTTP_200_OK

    with session_scope() as session:
        query = session.query(TblTasks.id).where(TblTasks.id == test_task_id).first()
        assert query


def test_user_can_delete_task():
    global test_task_id
    logging.info(test_task_id)
    response = client.delete(f"/tasks/{test_task_id}")
    assert response.status_code == status.HTTP_204_NO_CONTENT

    with session_scope() as session:
        query = session.query(TblTasks.id).where(TblTasks.id == test_task_id).first()
        assert not query
